---
# Copyright (c) 2017, Secnix Systems
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the <organization> nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL BIS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Import the public keys in this role's "files" directory. 
# Each file should be user_name.pub, but this splits /path/to/<filename>.pub
# as the name of the key pair.
- name: Import public keys
  os_keypair:
    name: "{{ item.split('/')[-1].rsplit('.')[0] }}"
    public_key_file: "{{ item }}"
  with_fileglob:
  - roles/ukdigital-openstack/files/*

##### VPN Servers #####
- name: Create vpn security group
  os_security_group:
    name=vpn
    description="VPN access from the Internet"

- name: Remove default egress allowed from vpn group
  os_security_group_rule:
    state: absent
    security_group: vpn
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow vpn https ingress
  os_security_group_rule:
    security_group: vpn
    protocol: tcp
    port_range_min: 443
    port_range_max: 443
    remote_ip_prefix: "{{ item }}"
  with_items:
  - 193.240.0.0/16
  - 94.118.0.0/16
  - 94.119.0.0/16
  - 217.138.9.100/32

- name: Allow vpn tcp:1194 ingress to 0.0.0.0/0
  os_security_group_rule:
    security_group: vpn
    protocol: udp
    port_range_min: 1194
    port_range_max: 1194
    remote_ip_prefix: 0.0.0.0/0

##### External SSH #####

- name: Create external_ssh security group
  os_security_group:
    name=external_ssh
    description="SSH traffic to a node from the Internet"

- name: Remove default egress allowed from external_ssh group
  os_security_group_rule:
    state: absent
    security_group: external_ssh
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow ssh (tcp:22) from a host on the Internet
  os_security_group_rule:
    security_group: external_ssh
    protocol: tcp
    port_range_min: 22
    port_range_max: 22
    remote_ip_prefix: "{{ item }}"
  with_items:
  - 193.240.0.0/16
  - 94.118.0.0/16

##### Remote Repositories #####

- name: Create remote_repositories security group
  os_security_group:
    name=remote_repositories
    description="Traffic for node's access to remote_repositories"

##### External DNS #####

- name: Create remote_dns security group
  os_security_group:
    name=remote_dns
    description="Remote dns queries"

- name: Remove default egress allowed from remote_dns group
  os_security_group_rule:
    state: absent
    security_group: remote_dns
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow remote dns queries
  os_security_group_rule:
    security_group: remote_dns
    protocol: "{{ item }}"
    port_range_min: 53
    port_range_max: 53
    remote_ip_prefix: 0.0.0.0/0
  with_items:
  - tcp
  - udp

- name: Allow ssh for management
  os_security_group_rule:
    security_group: remote_dns
    protocol: tcp
    port_range_min: 22
    port_range_max: 22
    remote_ip_prefix: "{{ item }}"
  with_items:
  - 10.100.254.0/24

#### Monitoring Servers #####

- name: Create the internal_monitoring security group
  os_security_group: 
    name=internal_monitoring
    description="Internal monitoring access"

- name: Remove default egress allowed from internal_monitoring group
  os_security_group_rule:
    state: absent
    security_group: internal_monitoring
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow internal_monitoring tcp from internal_monitoring group
  os_security_group_rule:
    security_group: internal_monitoring
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    direction: egress
  with_items:
    - 22

- name: Create the private_monitoring security group
  os_security_group:
    name=private_monitoring
    description="Private monitoring communication"

- name: Remove default egress allowed from private_monitoring group
  os_security_group_rule:
    state: absent
    security_group: private_monitoring
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow egress to private network
  os_security_group_rule:
    state: present
    security_group: private_monitoring
    ethertype: "{{ item }}"
    remote_ip_prefix: 172.17.1.0/24
    direction: egress
  with_items:
  - IPv4

- name: Allow private_monitoring tcp
  os_security_group_rule:
    security_group: private_monitoring
    protocol: tcp
    remote_ip_prefix: 172.17.1.0/24
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    direction: ingress
  with_items:
    - 22

##### IPA Servers #####

- name: Create ipa_server security group
  os_security_group:
    name=ipa_server
    description="Traffic for IPA Server nodes"

- name: Remove default egress allowed from ipa_server group
  os_security_group_rule:
    state: absent
    security_group: ipa_server
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow ipa-server tcp:{{ item }} from the compartment
  os_security_group_rule:
    security_group: ipa_server
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 10.100.0.0/16
  with_items:
  - 53
  - 80
  - 88
  - 389
  - 443
  - 464
  - 636

- name: Allow ipa_server udp:{{ item }} from the compartment
  os_security_group_rule:
    security_group: ipa_server
    protocol: udp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 10.100.0.0/16
  with_items:
  - 53
  - 88
  - 123
  - 464

##### App Load Balancer Nodes #####

- name: Create app_loadbalancer_nodes security group
  os_security_group:
    name=app_loadbalancer_nodes
    description="Internet traffic to app nodes"

- name: Remove default egress allowed from app_loadbalancer_nodes group
  os_security_group_rule:
    state: absent
    security_group: app_loadbalancer_nodes
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow tcp from the internet to the app compartment
  os_security_group_rule:
    security_group: app_loadbalancer_nodes
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 0.0.0.0/0
  with_items:
  - 80
  - 443

- name: Allow tcp from the compartment to the app loadbalancers
  os_security_group_rule:
    security_group: app_loadbalancer_nodes
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 10.100.0.0/16
  with_items:
  - 8443

##### App Nodes #####

- name: Create app_nodes security group
  os_security_group:
    name=app_nodes
    description="Traffic for app enclave nodes"

- name: Remove default egress allowed from app_nodes group
  os_security_group_rule:
    state: absent
    security_group: app_nodes
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow ssh (tcp:22) to/from a host in the compartment
  os_security_group_rule:
    security_group: app_nodes
    protocol: tcp
    direction: "{{ item }}"
    port_range_min: 22
    port_range_max: 22
    remote_ip_prefix: 10.100.0.0/16
  with_items:
  - ingress
  - egress

##### Mgmt Nodes #####

- name: Create mgmt security group
  os_security_group:
    name=mgmt_nodes
    description="Traffic for mgmt enclave nodes"

- name: Remove default egress allowed from mgmt_nodes group
  os_security_group_rule:
    state: absent
    security_group: mgmt_nodes
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow ssh (tcp:22) to/from a host in the compartment
  os_security_group_rule:
    security_group: mgmt_nodes
    protocol: tcp
    direction: "{{ item }}"
    port_range_min: 22
    port_range_max: 22
    remote_ip_prefix: 10.100.0.0/16
  with_items:
  - ingress
  - egress

##### Openshift App Master #####

- name: Create app OpenShift master group
  os_security_group:
    name=app_openshift_master
    description="Traffic for app enclave OpenShift master"

- name: Remove default egress allowed from app_openshift_master group
  os_security_group_rule:
    state: absent
    security_group: app_openshift_master
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow remote access to app OpenShift master:tcp ports from anywhere
  os_security_group_rule:
    security_group: app_openshift_master
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 0.0.0.0/0
  with_items:
  - 80
  - 8443
  - 9090

- name: Allow specific tcp to OpenShift master from the app compartment
  os_security_group_rule:
    security_group: app_openshift_master
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 10.100.1.0/24
  with_items:
  - 111
  - 1936
  - 2049
  - 2379
  - 2380
  - 4194
  - 8080
  - 10250
  - 20048
  - 50825
  - 53248

- name: Allow specific udp to OpenShift master from the app compartment
  os_security_group_rule:
    security_group: app_openshift_master
    protocol: udp
    port_range_min: "{{ item | int }}"
    port_range_max: "{{ item | int }}"
    remote_ip_prefix: 10.100.1.0/24
  with_items:
  - 4789

- name: Allow specific tcp and udp to OpenShift master from the app compartment
  os_security_group_rule:
    security_group: app_openshift_master
    protocol: "{{ item[0] }}"
    port_range_min: "{{ item[1] | int }}"
    port_range_max: "{{ item[1] | int }}"
    remote_ip_prefix: 10.100.1.0/24
  with_nested:
  - [ 'tcp', 'udp' ]
  - [ 8053, 24224 ]

##### Openshift App Node #####

- name: Create app OpenShift node group
  os_security_group:
    name=app_openshift_node
    description="Traffic for app enclave OpenShift node"

- name: Remove default egress allowed from app_openshift_node group
  os_security_group_rule:
    state: absent
    security_group: app_openshift_node
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow specific tcp ports to OpenShift node from the app compartment
  os_security_group_rule:
    security_group: app_openshift_node
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 10.100.1.0/24
  with_items:
  - 10250

- name: Allow specific udp ports to OpenShift node from the app compartment
  os_security_group_rule:
    security_group: app_openshift_node
    protocol: udp
    port_range_min: "{{ item | int }}"
    port_range_max: "{{ item | int }}"
    remote_ip_prefix: 10.100.1.0/24
  with_items:
  - 4789

##### Svc Nodes #####

- name: Create svc_nodes security group
  os_security_group:
    name=svc_nodes
    description="Traffic for svc enclave nodes"

- name: Remove default egress allowed from svc_nodes group
  os_security_group_rule:
    state: absent
    security_group: svc_nodes
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow ssh (tcp:22) to/from a host in the compartment
  os_security_group_rule:
    security_group: svc_nodes
    protocol: tcp
    direction: "{{ item }}"
    port_range_min: 22
    port_range_max: 22
    remote_ip_prefix: 10.100.0.0/16
  with_items:
  - ingress
  - egress

##### Svc Load Balancer Nodes #####

- name: Create svc_loadbalancer_nodes security group
  os_security_group:
    name=svc_loadbalancer_nodes
    description="Internal traffic to svc nodes"

- name: Remove default egress allowed from svc_loadbalancer_nodes group
  os_security_group_rule:
    state: absent
    security_group: svc_loadbalancer_nodes
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow tcp from the app to the svc services
  os_security_group_rule:
    security_group: svc_loadbalancer_nodes
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 10.100.1.0/24
  with_items:
  - 80
  - 443

- name: Allow tcp from the dmz to the svc services
  os_security_group_rule:
    security_group: svc_loadbalancer_nodes
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 10.100.253.0/28
  with_items:
  - 80
  - 443

- name: Allow tcp from the compartment to the svc loadbalancers
  os_security_group_rule:
    security_group: app_loadbalancer_nodes
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 10.100.0.0/16
  with_items:
  - 8443

##### OpenShift Svc Master #####

- name: Create svc OpenShift master group
  os_security_group:
    name=svc_openshift_master
    description="Traffic for svc enclave OpenShift master"

- name: Remove default egress allowed from svc_openshift_master group
  os_security_group_rule:
    state: absent
    security_group: svc_openshift_master
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow remote access to svc OpenShift master:tcp ports from svc compartment
  os_security_group_rule:
    security_group: svc_openshift_master
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 10.100.20.0/24
  with_items:
  - 80
  - 8443
  - 9090

- name: Allow remote access to svc OpenShift master:tcp ports from app
  os_security_group_rule:
    security_group: svc_openshift_master
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 10.100.1.0/24
  with_items:
  - 80
  - 8443

- name: Allow specific tcp to OpenShift master from the svc compartment
  os_security_group_rule:
    security_group: svc_openshift_master
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 10.100.20.0/24
  with_items:
  - 111
  - 2049
  - 2379
  - 2380
  - 4194
  - 8080
  - 10250
  - 20048
  - 50825
  - 53248

- name: Allow specific udp to OpenShift master from the svc compartment
  os_security_group_rule:
    security_group: svc_openshift_master
    protocol: udp
    port_range_min: "{{ item | int }}"
    port_range_max: "{{ item | int }}"
    remote_ip_prefix: 10.100.20.0/24
  with_items:
  - 4789

- name: Allow specific tcp and udp to OpenShift master from the svc compartment
  os_security_group_rule:
    security_group: svc_openshift_master
    protocol: "{{ item[0] }}"
    port_range_min: "{{ item[1] | int }}"
    port_range_max: "{{ item[1] | int }}"
    remote_ip_prefix: 10.100.20.0/24
  with_nested:
  - [ 'tcp', 'udp' ]
  - [ 8053, 24224 ]


##### Openshift Svc Node #####

- name: Create svc OpenShift node group
  os_security_group:
    name=svc_openshift_node
    description="Traffic for svc enclave OpenShift node"

- name: Remove default egress allowed from svc_openshift_node group
  os_security_group_rule:
    state: absent
    security_group: svc_openshift_node
    ethertype: "{{ item }}"
    direction: egress
  with_items:
  - IPv4
  - IPv6

- name: Allow specific tcp ports to OpenShift node from the svc compartment
  os_security_group_rule:
    security_group: svc_openshift_node
    protocol: tcp
    port_range_min: "{{ item }}"
    port_range_max: "{{ item }}"
    remote_ip_prefix: 10.100.20.0/24
  with_items:
  - 10250

- name: Allow specific udp ports to OpenShift node from the svc compartment
  os_security_group_rule:
    security_group: svc_openshift_node
    protocol: udp
    port_range_min: "{{ item | int }}"
    port_range_max: "{{ item | int }}"
    remote_ip_prefix: 10.100.20.0/24
  with_items:
  - 4789
